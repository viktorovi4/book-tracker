# tests/e2e/test_book_tracker_e2e.py
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
import pytest

def add_test_book(browser, title, author, genre, date_read):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–∏–≥–∏ —á–µ—Ä–µ–∑ UI"""
    try:
        browser.get("http://localhost:5000/add")

        # –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã
        WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, "form.book-form")))

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
        browser.find_element(By.NAME, "title").send_keys(title)
        browser.find_element(By.NAME, "author").send_keys(author)
        browser.find_element(By.NAME, "genre").send_keys(genre)

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª–µ –¥–∞—Ç—ã - –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–±
        date_field = browser.find_element(By.NAME, "date_read")
        browser.execute_script(f"arguments[0].value = '{date_read}';", date_field)

        # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É
        submit_button = browser.find_element(By.CSS_SELECTOR, "form.book-form button[type='submit']")
        submit_button.click()
        
        # –î–∞–µ–º –≤—Ä–µ–º—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–±–Ω–æ–≤–∏—Ç—å—Å—è –∏ –ø—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ—Ç –ª–∏ –æ—à–∏–±–∫–∏
        time.sleep(1)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞)
        # –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏, –µ—Å–ª–∏ –¥–∞—Ç–∞ –≤—Å—ë –∂–µ –Ω–µ –ø—Ä–∏–Ω—è—Ç–∞
        if "alert-error" in browser.page_source:
             error_msg_elem = browser.find_element(By.CLASS_NAME, "alert-error")
             error_msg = error_msg_elem.text
             raise AssertionError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã: {error_msg}")

    except Exception as e:
        # print(f"Error adding book: {e}") # –û—Ç–ª–∞–¥–∫–∞
        # print("Current URL:", browser.current_url)
        # print("Page source snippet:", browser.page_source[:500])
        raise

def test_add_book(login_user, clean_db):
    """Test adding a book via UI"""
    browser = login_user
    # clean_db —Ñ–∏–∫—Å—Ç—É—Ä–∞ —É–∂–µ –æ—á–∏—Å—Ç–∏–ª–∞ –ë–î, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ

    add_test_book(browser, "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞", "–¢–µ—Å—Ç–æ–≤—ã–π –ê–≤—Ç–æ—Ä", "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "2025-07-01")

    # Verify book appears on main page
    browser.get("http://localhost:5000/")
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —è–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ–≥–æ assert
    try:
        WebDriverWait(browser, 10).until(
            EC.text_to_be_present_in_element((By.TAG_NAME, "body"), "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞")
        )
    except TimeoutException:
        # –ï—Å–ª–∏ –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ø—Ä—è–º—É—é
        assert "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞" in browser.page_source, "–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
    assert "–¢–µ—Å—Ç–æ–≤—ã–π –ê–≤—Ç–æ—Ä" in browser.page_source
    assert "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞" in browser.page_source

def test_add_and_delete_book(login_user, clear_books):
    """Test adding and deleting a book"""
    browser = login_user
    # clear_books —Ñ–∏–∫—Å—Ç—É—Ä–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –æ—á–∏—Å—Ç–∫—É, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ

    # Add test book
    add_test_book(browser, "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", "–ê–≤—Ç–æ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", "–ñ–∞–Ω—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", "2025-07-01")

    # Verify book is added
    browser.get("http://localhost:5000/")
    try:
        WebDriverWait(browser, 10).until(
            EC.text_to_be_present_in_element((By.TAG_NAME, "body"), "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        )
    except TimeoutException:
        assert "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è" in browser.page_source, "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"

    # Delete the book
    try:
        # –Ø–≤–Ω–æ –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥
        WebDriverWait(browser, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "book-list"))
        )
        
        # –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –æ–±—â–∏–π XPath –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å—Ç–∏–ª–∏ –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è.
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç '/delete/' –≤ href.
        delete_link = WebDriverWait(browser, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//a[contains(@href, '/delete/') and contains(text(), 'üóëÔ∏è')]"))
        )
        
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —ç–ª–µ–º–µ–Ω—Ç—É –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        browser.execute_script("arguments[0].scrollIntoView({block: 'center'});", delete_link)
        time.sleep(0.5) # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

        # === –í–ê–ñ–ù–û: –£–±–∏—Ä–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ alert ===
        # –ö–ª–∏–∫–∞–µ–º —Å –ø–æ–º–æ—â—å—é JavaScript –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        browser.execute_script("arguments[0].click();", delete_link)
        
        # === –í–º–µ—Å—Ç–æ alert, –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º, –ø–æ–∫–∞ –∫–Ω–∏–≥–∞ –∏—Å—á–µ–∑–Ω–µ—Ç ===
        # –ñ–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–∏–ª–∞—Å—å –∏–ª–∏ –∫–Ω–∏–≥–∞ –∏—Å—á–µ–∑–ª–∞
        time.sleep(2) 

    except Exception as e: # –õ–æ–≤–∏–º –ª—é–±—É—é –æ—à–∏–±–∫—É (Timeout, NoSuchElementException, ...)
        # print("Error during delete process:")
        # print("Current URL:", browser.current_url)
        # print("Page source snippet:", browser.page_source[:500])
        raise AssertionError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É: {e}")

    # Verify book is gone from the page
    browser.get("http://localhost:5000/") # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    # –Ø–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    try:
        WebDriverWait(browser, 10).until_not(
            EC.text_to_be_present_in_element((By.TAG_NAME, "body"), "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        )
    except TimeoutException:
        # –ï—Å–ª–∏ —è–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ø—Ä—è–º—É—é
        assert "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è" not in browser.page_source, "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å—ë –µ—â—ë –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è"



def test_add_and_edit_book(login_user, clear_books):
    """Test adding and editing a book"""
    browser = login_user
    # clear_books —Ñ–∏–∫—Å—Ç—É—Ä–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –æ—á–∏—Å—Ç–∫—É, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ

    # Add test book
    add_test_book(browser, "–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", "–°—Ç–∞—Ä—ã–π –∞–≤—Ç–æ—Ä", "–°—Ç–∞—Ä—ã–π –∂–∞–Ω—Ä", "2025-07-01")

    # Verify book is added before trying to edit
    browser.get("http://localhost:5000/")
    try:
        WebDriverWait(browser, 10).until(
            EC.text_to_be_present_in_element((By.TAG_NAME, "body"), "–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
        )
    except TimeoutException:
        assert "–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ" in browser.page_source, "–ö–Ω–∏–≥–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"

    # Find and click edit button
    try:
        # –Ø–≤–Ω–æ –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥
        WebDriverWait(browser, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "book-list"))
        )
        edit_link = WebDriverWait(browser, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//div[@class='book-card']//a[contains(@href, '/edit/') and contains(text(), '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')]"))
        )
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —ç–ª–µ–º–µ–Ω—Ç—É
        browser.execute_script("arguments[0].scrollIntoView(true);", edit_link)
        time.sleep(0.5) # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
        
        # –ö–ª–∏–∫–∞–µ–º —Å –ø–æ–º–æ—â—å—é JavaScript –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        browser.execute_script("arguments[0].click();", edit_link)
    except (TimeoutException, NoSuchElementException) as e:
        # print("Edit button not found:")
        # print("Current URL:", browser.current_url)
        # print("Page source snippet:", browser.page_source[:500])
        raise AssertionError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞–π—Ç–∏/–∫–ª–∏–∫–Ω—É—Ç—å –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

    try:
        # Wait for edit form and update fields
        WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.NAME, "title")))
        title_input = browser.find_element(By.NAME, "title")
        author_input = browser.find_element(By.NAME, "author")
        genre_input = browser.find_element(By.NAME, "genre")
        date_read_input = browser.find_element(By.NAME, "date_read")

        # Clear and fill new data
        title_input.clear()
        title_input.send_keys("–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
        author_input.clear()
        author_input.send_keys("–ù–æ–≤—ã–π –∞–≤—Ç–æ—Ä")
        genre_input.clear()
        genre_input.send_keys("–ù–æ–≤—ã–π –∂–∞–Ω—Ä")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º JS –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –∏ –∑–¥–µ—Å—å —Ç–æ–∂–µ
        browser.execute_script("arguments[0].value = '2025-08-02';", date_read_input)

        # Submit the form
        submit_button = browser.find_element(By.CSS_SELECTOR, "form.book-form button[type='submit']")
        submit_button.click()
        time.sleep(1) # Give time for redirect

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ –æ—à–∏–±–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if "alert-error" in browser.page_source:
             error_msg_elem = browser.find_element(By.CLASS_NAME, "alert-error")
             error_msg = error_msg_elem.text
             raise AssertionError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã: {error_msg}")

    except Exception as e:
        # print("Error during editing:")
        # print("Current URL:", browser.current_url)
        # print("Page source snippet:", browser.page_source[:500])
        raise AssertionError(f"–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏: {e}")

    # Verify changes on main page
    browser.get("http://localhost:5000/")
    # –Ø–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è
    try:
        WebDriverWait(browser, 10).until(
            EC.text_to_be_present_in_element((By.TAG_NAME, "body"), "–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
        )
    except TimeoutException:
        assert "–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ" in browser.page_source, "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ (–Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
        
    assert "–ù–æ–≤—ã–π –∞–≤—Ç–æ—Ä" in browser.page_source
    assert "–ù–æ–≤—ã–π –∂–∞–Ω—Ä" in browser.page_source
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å—Ç–∞—Ä–∞—è –∫–Ω–∏–≥–∞ –∏—Å—á–µ–∑–ª–∞
    assert "–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ" not in browser.page_source
