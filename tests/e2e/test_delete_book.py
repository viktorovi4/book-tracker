# tests\e2e\test_delete_book.py
# –ò–º–ø–æ—Ä—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º–∏
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
import pytest
import time

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º add_test_book –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ e2e —Ç–µ—Å—Ç–æ–≤
from tests.e2e.test_book_tracker_e2e import add_test_book

def test_delete_book(login_user, clear_books):
    """
    –¢–µ—Å—Ç: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏, —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–∏–≥ —á–µ—Ä–µ–∑ UI (–∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è),
    –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –ø—É—Å—Ç.
    """
    browser = login_user
    # clear_books —Ñ–∏–∫—Å—Ç—É—Ä–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –æ—á–∏—Å—Ç–∫—É –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º

    # 1. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–Ω–∏–≥—É, –∏—Å–ø–æ–ª—å–∑—É—è —É–∂–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã–π browser
    add_test_book(browser, "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è 1", "–ê–≤—Ç–æ—Ä 1", "–ñ–∞–Ω—Ä 1", "2025-07-01")
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –∫–Ω–∏–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞
    try:
        WebDriverWait(browser, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "alert-success"))
        )
    except TimeoutException:
        if "alert-error" in browser.page_source:
             error_msg_elem = browser.find_element(By.CLASS_NAME, "alert-error")
             error_msg = error_msg_elem.text
             raise AssertionError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–≤–æ–π –∫–Ω–∏–≥–∏: {error_msg}")
        else:
             raise AssertionError("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—Å–ø–µ—à–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –∫–Ω–∏–≥–∏.")

    add_test_book(browser, "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è 2", "–ê–≤—Ç–æ—Ä 2", "–ñ–∞–Ω—Ä 2", "2025-07-02")
    # –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∫–Ω–∏–≥–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ
    try:
        WebDriverWait(browser, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "alert-success"))
        )
    except TimeoutException:
        if "alert-error" in browser.page_source:
             error_msg_elem = browser.find_element(By.CLASS_NAME, "alert-error")
             error_msg = error_msg_elem.text
             raise AssertionError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤—Ç–æ—Ä–æ–π –∫–Ω–∏–≥–∏: {error_msg}")
        else:
             raise AssertionError("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—Å–ø–µ—à–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∫–Ω–∏–≥–∏.")


    # 2. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–ò–°–ü–û–õ–¨–ó–£–ï–ú localhost)
    browser.get("http://localhost:5000") # <--- –ò–ó–ú–ï–ù–ï–ù–û –° 127.0.0.1

    # –Ø–≤–Ω–æ –∂–¥–µ–º, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥
    try:
        WebDriverWait(browser, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "book-list"))
        )
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –∫–Ω–∏–≥–∏ –¥–æ–±–∞–≤–∏–ª–∏—Å—å
        WebDriverWait(browser, 10).until(
            EC.text_to_be_present_in_element((By.TAG_NAME, "body"), "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è 1")
        )
    except TimeoutException:
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ –æ–∫–∞–∑–∞–ª—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞
        # (–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É, –∞ –Ω–µ –ø–æ URL, —Ç–∞–∫ –∫–∞–∫ —Ä–µ–¥–∏—Ä–µ–∫—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å)
        page_text = browser.find_element(By.TAG_NAME, "body").text
        if "–í–æ–π—Ç–∏" in page_text and ("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" in page_text or "–õ–æ–≥–∏–Ω" in page_text or "username" in browser.page_source):
            raise AssertionError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–ª—Å—è. –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –≤–º–µ—Å—Ç–æ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥.")
        # –ï—Å–ª–∏ –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ø—Ä—è–º—É—é
        assert "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è 1" in browser.page_source, "–ö–Ω–∏–≥–∏ –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–ª—Å—è"

    # 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏ —á–µ—Ä–µ–∑ UI
    try:
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–Ω–∏–≥
        book_cards = WebDriverWait(browser, 10).until(
            EC.presence_of_all_elements_located((By.CLASS_NAME, "book-card"))
        )

        initial_count = len(book_cards)
        # print(f"–ù–∞–π–¥–µ–Ω–æ {initial_count} –∫–Ω–∏–≥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
        for i in range(initial_count):
            # –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –∑–∞–Ω–æ–≤–æ –∏—â–µ–º –∫–Ω–æ–ø–∫—É, —Ç–∞–∫ –∫–∞–∫ DOM –º–µ–Ω—è–µ—Ç—Å—è
            delete_button = WebDriverWait(browser, 10).until(
                EC.element_to_be_clickable((By.XPATH, "//div[@class='book-card']//a[contains(@href, '/delete/') and contains(text(), 'üóëÔ∏è')]"))
            )

            # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–Ω–æ–ø–∫–µ
            browser.execute_script("arguments[0].scrollIntoView({block: 'center'});", delete_button)
            time.sleep(0.5)

            # –ö–ª–∏–∫–∞–µ–º —Å –ø–æ–º–æ—â—å—é JavaScript
            browser.execute_script("arguments[0].click();", delete_button)

            # –ñ–¥–µ–º, –ø–æ–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∏–ª–∏ –∫–Ω–∏–≥–∞ –∏—Å—á–µ–∑–Ω–µ—Ç
            time.sleep(1.5) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏

    except Exception as e:
        raise AssertionError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥ —á–µ—Ä–µ–∑ UI: {e}")

    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –ø—É—Å—Ç
    browser.get("http://localhost:5000") # <--- –ò–ó–ú–ï–ù–ï–ù–û –° 127.0.0.1
    try:
        # –Ø–≤–Ω–æ –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        WebDriverWait(browser, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "book-list"))
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç—ã —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
        WebDriverWait(browser, 10).until_not(
            EC.text_to_be_present_in_element((By.TAG_NAME, "body"), "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è 1")
        )
        WebDriverWait(browser, 10).until_not(
            EC.text_to_be_present_in_element((By.TAG_NAME, "body"), "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è 2")
        )
    except TimeoutException:
        # –ï—Å–ª–∏ —è–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ø—Ä—è–º—É—é
        page_source = browser.page_source
        assert "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è 1" not in page_source
        assert "–ö–Ω–∏–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è 2" not in page_source

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
    # assert "–ù–µ—Ç –∫–Ω–∏–≥" in browser.page_source or "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç" in browser.page_source # –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –≤–∞—à —à–∞–±–ª–æ–Ω
